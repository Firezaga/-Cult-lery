[gd_scene load_steps=5 format=3 uid="uid://uf46ti34caf7"]

[ext_resource type="Texture2D" uid="uid://cgrrjkjqur54f" path="res://Art/Character/Test Rig/gBot_pieces.png" id="2_tmp2q"]

[sub_resource type="Animation" id="Animation_6hr15"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../LegL/CalfL:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(19, -80)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../LegL/CalfL:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [-1.0472]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../LegL/CalfL:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../LegL:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(22, -58)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../LegL:rotation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [-1.5708]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../LegL:scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../LegR:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(16, 48)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../LegR:rotation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [-1.5708]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("../LegR:scale")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("../LegR/CalfR:position")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(19, -80)]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("../LegR/CalfR:rotation")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [-1.309]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("../LegR/CalfR:scale")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_5p4xo"]
resource_name = "Walk"
loop_mode = 1
step = 0.03
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../LegL/CalfL:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(19, -80), Vector2(19, -80), Vector2(19, -80)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../LegL/CalfL:rotation")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, -0.261799, 0.0]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../LegL/CalfL:scale")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../LegL:position")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(22, -58), Vector2(22, -58), Vector2(22, -58)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("../LegL:rotation")
tracks/4/interp = 2
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [-1.5708, -2.61799, -1.5708]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../LegL:scale")
tracks/5/interp = 2
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../LegR:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(16, 48), Vector2(16, 48), Vector2(16, 48)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../LegR:rotation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [-1.83259, -1.0472, -1.83259]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("../LegR:scale")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("../LegR/CalfR:position")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(19, -80), Vector2(19, -80), Vector2(19, -80)]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("../LegR/CalfR:rotation")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [-1.309, -0.523598, -1.309]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("../LegR/CalfR:scale")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0, 0.48, 0.99),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_jdkoa"]
_data = {
"RESET": SubResource("Animation_6hr15"),
"Test-rig-Walk": SubResource("Animation_5p4xo")
}

[node name="CharacterBody2D" type="CharacterBody2D"]

[node name="Polygons" type="Node2D" parent="."]
position = Vector2(0, -35)

[node name="ArmR" type="Polygon2D" parent="Polygons"]
position = Vector2(-161, -125)
texture = ExtResource("2_tmp2q")
skeleton = NodePath("../../Skeleton2D")
polygon = PackedVector2Array(224, 16, 176, 40, 176, 200, 184, 312, 224, 368, 264, 360, 296, 320, 280, 272, 264, 184, 288, 40, 216, 184, 232, 288)
uv = PackedVector2Array(224, 16, 176, 40, 176, 200, 184, 312, 224, 368, 264, 360, 296, 320, 280, 272, 264, 184, 288, 40, 216, 184, 232, 288)
polygons = [PackedInt32Array(1, 2, 10, 0), PackedInt32Array(0, 9, 8, 10), PackedInt32Array(2, 3, 11, 10), PackedInt32Array(8, 10, 11, 7), PackedInt32Array(11, 3, 4, 5), PackedInt32Array(11, 5, 6, 7)]
bones = ["Hip", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head/Jaw", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR", PackedFloat32Array(1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0), "Hip/Chest/ArmR/ForearmR", PackedFloat32Array(0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1), "Hip/Chest/ArmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL/ForearmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL/FootL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR/FootR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)]
internal_vertex_count = 2

[node name="LegR" type="Polygon2D" parent="Polygons"]
position = Vector2(-276, -272)
texture = ExtResource("2_tmp2q")
skeleton = NodePath("../../Skeleton2D")
polygon = PackedVector2Array(312, 384, 280, 392, 280, 464, 248, 504, 248, 616, 240, 696, 320, 704, 416, 696, 400, 616, 352, 584, 336, 544, 352, 480, 344, 400, 312, 464, 288, 536, 304, 600)
uv = PackedVector2Array(312, 384, 280, 392, 280, 464, 248, 504, 248, 616, 240, 696, 320, 704, 416, 696, 400, 616, 352, 584, 336, 544, 352, 480, 344, 384, 312, 464, 288, 536, 304, 600)
polygons = [PackedInt32Array(1, 0, 13, 2), PackedInt32Array(0, 13, 11, 12), PackedInt32Array(2, 3, 14, 13), PackedInt32Array(13, 14, 10, 11), PackedInt32Array(3, 4, 15, 14), PackedInt32Array(14, 15, 9, 10), PackedInt32Array(4, 5, 6, 15), PackedInt32Array(15, 6, 7), PackedInt32Array(15, 9, 8, 7)]
bones = ["Hip", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head/Jaw", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR/ForearmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL/ForearmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL/FootL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR", PackedFloat32Array(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0), "Hip/LegR/CalfR", PackedFloat32Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1), "Hip/LegR/CalfR/FootR", PackedFloat32Array(0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0)]
internal_vertex_count = 3

[node name="Torso" type="Polygon2D" parent="Polygons"]
position = Vector2(-456, -162)
texture = ExtResource("2_tmp2q")
skeleton = NodePath("../../Skeleton2D")
polygon = PackedVector2Array(432, 16, 392, 32, 384, 80, 352, 96, 352, 96, 344, 208, 368, 232, 368, 248, 352, 264, 352, 312, 416, 352, 496, 320, 496, 272, 472, 264, 472, 248, 528, 184, 488, 80, 480, 32, 440, 184, 424, 304, 424, 256)
uv = PackedVector2Array(432, 16, 392, 32, 384, 80, 352, 96, 352, 96, 344, 208, 368, 232, 368, 248, 352, 264, 352, 312, 416, 352, 496, 320, 496, 272, 472, 264, 472, 248, 528, 192, 488, 80, 480, 32, 440, 184, 424, 304, 424, 256)
polygons = [PackedInt32Array(0, 1, 18), PackedInt32Array(0, 18, 17), PackedInt32Array(1, 2, 18), PackedInt32Array(2, 3, 5, 18), PackedInt32Array(17, 16, 18), PackedInt32Array(16, 15, 18), PackedInt32Array(5, 6, 18), PackedInt32Array(15, 14, 18), PackedInt32Array(18, 6, 7), PackedInt32Array(18, 13, 14), PackedInt32Array(7, 20, 18), PackedInt32Array(18, 20, 13), PackedInt32Array(9, 19, 10), PackedInt32Array(19, 10, 11), PackedInt32Array(7, 8, 19), PackedInt32Array(8, 9, 19), PackedInt32Array(7, 20, 19), PackedInt32Array(13, 19, 20), PackedInt32Array(13, 12, 19), PackedInt32Array(12, 11, 19)]
bones = ["Hip", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1), "Hip/Chest", PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0), "Hip/Chest/Head", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head/Jaw", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR/ForearmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL/ForearmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL/FootL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR/FootR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/BodyDeform", PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1)]
internal_vertex_count = 3

[node name="LegL" type="Polygon2D" parent="Polygons"]
position = Vector2(-155, -257)
texture = ExtResource("2_tmp2q")
skeleton = NodePath("../../Skeleton2D")
polygon = PackedVector2Array(80, 384, 56, 400, 48, 464, 24, 504, 24, 600, 16, 680, 96, 696, 192, 680, 160, 600, 128, 592, 112, 552, 128, 464, 120, 392, 88, 464, 80, 592, 72, 512)
uv = PackedVector2Array(80, 384, 56, 400, 48, 464, 24, 504, 24, 600, 16, 680, 96, 696, 192, 680, 160, 600, 128, 592, 112, 552, 128, 464, 120, 392, 88, 464, 80, 592, 72, 512)
polygons = [PackedInt32Array(0, 13, 2, 1), PackedInt32Array(0, 12, 11, 13), PackedInt32Array(2, 3, 15, 13), PackedInt32Array(13, 15, 10, 11), PackedInt32Array(3, 4, 14, 15), PackedInt32Array(15, 14, 9, 10), PackedInt32Array(14, 4, 5, 6), PackedInt32Array(14, 6, 7), PackedInt32Array(14, 9, 8, 7)]
bones = ["Hip", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head/Jaw", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR/ForearmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL/ForearmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL", PackedFloat32Array(1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0), "Hip/LegL/CalfL", PackedFloat32Array(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1), "Hip/LegL/CalfL/FootL", PackedFloat32Array(0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR/FootR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)]
internal_vertex_count = 3

[node name="ArmL" type="Polygon2D" parent="Polygons"]
position = Vector2(-196, -112)
texture = ExtResource("2_tmp2q")
skeleton = NodePath("../../Skeleton2D")
polygon = PackedVector2Array(80, 8, 32, 32, 24, 168, 32, 192, 16, 208, 24, 312, 56, 360, 96, 360, 140.289, 336.735, 128, 288, 112, 208, 96, 184, 104, 168, 144, 48, 80, 48, 64, 200, 72, 312, 72, 88, 64, 184)
uv = PackedVector2Array(80, 8, 32, 32, 24, 168, 32, 192, 16, 208, 24, 312, 56, 360, 96, 360, 140.289, 336.735, 128, 288, 112, 208, 96, 184, 104, 168, 144, 48, 72, 80, 64, 200, 72, 312, 72, 104, 64, 176)
polygons = [PackedInt32Array(1, 14, 0), PackedInt32Array(0, 14, 13), PackedInt32Array(1, 2, 17, 14), PackedInt32Array(13, 14, 17, 12), PackedInt32Array(17, 2, 12), PackedInt32Array(5, 16, 6), PackedInt32Array(16, 7, 6), PackedInt32Array(16, 8, 7), PackedInt32Array(16, 9, 8), PackedInt32Array(4, 15, 16, 5), PackedInt32Array(10, 15, 16, 9), PackedInt32Array(3, 4, 15), PackedInt32Array(11, 15, 10), PackedInt32Array(2, 18, 12), PackedInt32Array(2, 3, 15, 18), PackedInt32Array(11, 12, 18, 15)]
bones = ["Hip", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head/Jaw", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR/ForearmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL", PackedFloat32Array(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1), "Hip/Chest/ArmL/ForearmL", PackedFloat32Array(0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0), "Hip/LegL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL/FootL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR/FootR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)]
internal_vertex_count = 5

[node name="Head" type="Polygon2D" parent="Polygons"]
position = Vector2(-638, -679)
texture = ExtResource("2_tmp2q")
skeleton = NodePath("../../Skeleton2D")
polygon = PackedVector2Array(656, 240, 544, 264, 472, 368, 472, 488, 536, 512, 536, 544, 672, 544, 816, 544, 816, 496, 816, 344, 776, 264, 656, 408)
uv = PackedVector2Array(656, 240, 544, 264, 472, 368, 472, 488, 536, 512, 536, 544, 672, 544, 816, 544, 816, 496, 816, 344, 776, 264, 656, 392)
polygons = [PackedInt32Array(1, 11, 0), PackedInt32Array(0, 11, 10), PackedInt32Array(10, 11, 9), PackedInt32Array(11, 8, 9), PackedInt32Array(11, 8, 7), PackedInt32Array(11, 6, 7), PackedInt32Array(11, 5, 6), PackedInt32Array(4, 5, 11), PackedInt32Array(4, 3, 11), PackedInt32Array(3, 2, 11), PackedInt32Array(1, 2, 11)]
bones = ["Hip", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head", PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), "Hip/Chest/Head/Jaw", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR/ForearmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL/ForearmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL/FootL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR/FootR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)]
internal_vertex_count = 1

[node name="Mouth" type="Polygon2D" parent="Polygons"]
position = Vector2(-610, -761)
texture = ExtResource("2_tmp2q")
skeleton = NodePath("../../Skeleton2D")
polygon = PackedVector2Array(472, 560, 632, 560, 816, 560, 816, 672, 632, 688, 472, 664, 632, 616)
uv = PackedVector2Array(488, 568, 648, 568, 832, 568, 832, 680, 648, 696, 504, 680, 632, 616)
polygons = [PackedInt32Array(0, 5, 6, 1), PackedInt32Array(1, 6, 3, 2), PackedInt32Array(6, 5, 4, 3)]
bones = ["Hip", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/Chest", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/Chest/Head/Jaw", PackedFloat32Array(1, 1, 1, 1, 1, 1, 1), "Hip/Chest/ArmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmR/ForearmR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/Chest/ArmL/ForearmL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/LegL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/LegL/CalfL/FootL", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/LegR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0), "Hip/LegR/CalfR/FootR", PackedFloat32Array(0, 0, 0, 0, 0, 0, 0)]
internal_vertex_count = 1

[node name="Skeleton2D" type="Skeleton2D" parent="."]

[node name="Hip" type="Bone2D" parent="Skeleton2D"]
position = Vector2(-11, 133)
rotation = -1.5708
rest = Transform2D(-4.37114e-08, -1, 1, -4.37114e-08, -11, 133)

[node name="Chest" type="Bone2D" parent="Skeleton2D/Hip"]
position = Vector2(54, 2.36042e-06)
rest = Transform2D(1, 0, 0, 1, 54, 2.36042e-06)

[node name="Head" type="Bone2D" parent="Skeleton2D/Hip/Chest"]
position = Vector2(169, 7.38722e-06)
rest = Transform2D(1, 0, 0, 1, 169, 7.38722e-06)

[node name="Jaw" type="Bone2D" parent="Skeleton2D/Hip/Chest/Head"]
position = Vector2(66, -41)
scale = Vector2(100, 10.508)
rest = Transform2D(100, 0, 0, 10.508, 66, -41)
auto_calculate_length_and_angle = false
length = 10.815
bone_angle = 90.0

[node name="ArmR" type="Bone2D" parent="Skeleton2D/Hip/Chest"]
position = Vector2(153, 83)
rotation = -3.14159
rest = Transform2D(-1, -8.74228e-08, 8.74228e-08, -1, 153, 83)

[node name="ForearmR" type="Bone2D" parent="Skeleton2D/Hip/Chest/ArmR"]
position = Vector2(111, 14)
rotation = -0.261799
rest = Transform2D(0.965926, -0.258819, 0.258819, 0.965926, 111, 14)
auto_calculate_length_and_angle = false
length = 108.162
bone_angle = 0.0

[node name="ArmL" type="Bone2D" parent="Skeleton2D/Hip/Chest"]
position = Vector2(160, -101)
rotation = -3.14159
rest = Transform2D(-1, -1.50996e-07, 1.50996e-07, -1, 160, -101)

[node name="ForearmL" type="Bone2D" parent="Skeleton2D/Hip/Chest/ArmL"]
position = Vector2(110, 17)
rest = Transform2D(1, 0, 0, 1, 110, 17)
auto_calculate_length_and_angle = false
length = 108.162
bone_angle = 0.0

[node name="LegL" type="Bone2D" parent="Skeleton2D/Hip"]
position = Vector2(22, -58)
rotation = -1.5708
rest = Transform2D(-4.37114e-08, -1, 1, -4.37114e-08, 22, -58)

[node name="CalfL" type="Bone2D" parent="Skeleton2D/Hip/LegL"]
position = Vector2(19, -80)
rotation = -1.0472
rest = Transform2D(0.5, -0.866025, 0.866025, 0.5, 19, -80)

[node name="FootL" type="Bone2D" parent="Skeleton2D/Hip/LegL/CalfL"]
position = Vector2(131.466, -86.2942)
rotation = -1.0472
rest = Transform2D(0.5, -0.866025, 0.866025, 0.5, 131.466, -86.2942)
auto_calculate_length_and_angle = false
length = 62.241
bone_angle = -60.0

[node name="LegR" type="Bone2D" parent="Skeleton2D/Hip"]
position = Vector2(16, 48)
rotation = -1.5708
rest = Transform2D(-4.37114e-08, -1, 1, -4.37114e-08, 16, 48)

[node name="CalfR" type="Bone2D" parent="Skeleton2D/Hip/LegR"]
position = Vector2(19, -80)
rotation = -1.309
rest = Transform2D(0.5, -0.866025, 0.866025, 0.5, 19, -80)

[node name="FootR" type="Bone2D" parent="Skeleton2D/Hip/LegR/CalfR"]
position = Vector2(114.244, -82.1243)
rotation = -1.0472
rest = Transform2D(0.5, -0.866025, 0.866025, 0.5, 114.244, -82.1243)
auto_calculate_length_and_angle = false
length = 62.241
bone_angle = -60.0

[node name="BodyDeform" type="Bone2D" parent="Skeleton2D/Hip"]
position = Vector2(25, 1.09278e-06)
rest = Transform2D(1, 0, 0, 1, 25, 1.09278e-06)
auto_calculate_length_and_angle = false
length = 218.757
bone_angle = 0.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Skeleton2D/Hip/BodyDeform")
libraries = {
"": SubResource("AnimationLibrary_jdkoa")
}
